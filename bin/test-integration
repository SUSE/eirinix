#!/bin/bash
set -eu

GIT_ROOT="${GIT_ROOT:-$(git rev-parse --show-toplevel)}"
. "${GIT_ROOT}/bin/include/versioning"

PLATFORM="${PLATFORM:-linux}"
ARCH="${ARCH:-amd64}"

KIND_PLATFORM="${KIND_PLATFORM:-${PLATFORM}-${ARCH}}"
KIND_VERSION="${KIND_VERSION:-v0.6.0}"
KUBECTL_VERSION="${KUBECTL_VERSION:-$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)}"

tmp_dir=$(mktemp -d -t ci-XXXXXXXXXX)
clean() {
  "${tmp_dir}"/kind delete cluster --name=eirinix-integration-tests || true
  rm -rf "${tmp_dir}"
}
trap clean EXIT

export KUBECONFIG="${tmp_dir}/kubeconfig"

echo "Downloading dependencies (kind $KIND_VERSION kubectl $KUBECTL_VERSION) in ${tmp_dir} and starting kind"
{
wget https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-${KIND_PLATFORM} -O "${tmp_dir}"/kind
wget https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/${PLATFORM}/${ARCH}/kubectl -O "${tmp_dir}"/kubectl
chmod +x "${tmp_dir}"/kind
chmod +x "${tmp_dir}"/kubectl

"${tmp_dir}"/kind create cluster --name=eirinix-integration-tests
} &> /dev/null

export PATH="${tmp_dir}:${PATH}"

echo "Waiting for the cluster to be ready"

# Wait for SA to be ready
{
n=0; until ((n >= 60)); do kubectl -n default get serviceaccount default -o name && break; n=$((n + 1)); sleep 1; done; ((n < 60))
} &> /dev/null

ginkgo --slowSpecThreshold=50 integration/
